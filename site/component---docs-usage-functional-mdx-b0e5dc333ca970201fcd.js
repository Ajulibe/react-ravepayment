(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{p5Xy:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return i})),t.d(n,"default",(function(){return m}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk"),t("aD51");var a=t("SAVP"),o=t("TjRS");function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/usage/functional.mdx"}});var c={_frontmatter:i},u=o.a;function m(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,["components"]);return Object(a.b)(u,r({},c,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"functional-component"},"Functional component"),Object(a.b)("p",null,"ReactJs community has started with the adoption of usig functional component and I have to say it has been really great to have functional do what we want withoput having to worry much about react lifecycle. The example below shows how you can use the ",Object(a.b)("inlineCode",{parentName:"p"},"rave-payment")," in functional component"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"import React from 'react';\nimport {RaveProvider, RavePaymentButton} from 'react-ravepayment';\n\nconst config = {\n  txref: 'rave-123456',\n  customer_email: 'user@example.com',\n  customer_phone: '234099940409',\n  amount: 2000,\n  PBFPubKey: 'FLWPUBK-XXXXXXXXXXXXXXXXXXXXXXXXXX-X',\n  onSuccess: () => {},\n  onClose: () => {},\n};\n\nconst App = () => {\n  return (\n    <div>\n      <RaveProvider {...config}>\n        <RavePaymentButton>Pay 2000</RavePaymentButton>\n        {/* <RavePaymentButton text=\"Pay 2000\" /> */}\n      </RaveProvider>\n    </div>\n  );\n};\n\nexport default App;\n")),Object(a.b)("h2",{id:"styling-the-ravepaymentbutton"},"Styling the RavePaymentButton"),Object(a.b)("p",null,"The RavePaymentButton can be made just the way you wat by providing all ",Object(a.b)("inlineCode",{parentName:"p"},"className")," props or ",Object(a.b)("inlineCode",{parentName:"p"},"style")," props"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"import React from 'react';\nimport {RaveProvider, RavePaymentButton} from 'react-ravepayment';\n\nconst config = {\n  txref: 'rave-123456',\n  customer_email: 'user@example.com',\n  customer_phone: '234099940409',\n  amount: 2000,\n  PBFPubKey: 'FLWPUBK-XXXXXXXXXXXXXXXXXXXXXXXXXX-X',\n  onSuccess: () => {},\n  onClose: () => {},\n};\n\nconst App = () => {\n  return (\n    <div>\n      <RaveProvider {...config}>\n        <RavePaymentButton text=\"Pay 2000\" className=\"custom-component\" />\n      </RaveProvider>\n    </div>\n  );\n};\n\nexport default App;\n")),Object(a.b)("h2",{id:"using-custom-component"},"Using custom component"),Object(a.b)("p",null,"You can also use custom component or nested children to trigger the ",Object(a.b)("inlineCode",{parentName:"p"},"rave-payment")," ",Object(a.b)("inlineCode",{parentName:"p"},"initializePayment")," function. This gives you the flexibility to use the ",Object(a.b)("inlineCode",{parentName:"p"},"rave-payment")," in more component with just one initialization."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"import React from 'react';\nimport {RaveProvider, RavePayment} from 'react-ravepayment';\n\nconst config = {\n  txref: 'rave-123456',\n  customer_email: 'user@example.com',\n  customer_phone: '234099940409',\n  amount: 2000,\n  PBFPubKey: 'FLWPUBK-XXXXXXXXXXXXXXXXXXXXXXXXXX-X',\n\n};\n\nconst App = () => {\n  function onClose() {\n    ...\n  }\n\n  function onSuccess() {\n    ...\n  }\n\n  return (\n    <div>\n      <RavePayment {...config}>\n        {({initializePayment}) => <button onClick={() => initializePayment(onSuccess, onClose)}>Pay 2000</button>}\n      </RavePayment>\n    </div>\n  );\n};\n\nexport default App;\n")),Object(a.b)("h3",{id:"note"},"NOTE"),Object(a.b)("p",null,"You cannot use the ",Object(a.b)("inlineCode",{parentName:"p"},"initializePayment")," payment function in a your handler as follows:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"<button onClick={initializePayment}>Pay 2000</button>\n")),Object(a.b)("p",null,"the function requires two parameters which are optinal however using it like above would be passing the default parameter ",Object(a.b)("inlineCode",{parentName:"p"},"event")," from ",Object(a.b)("inlineCode",{parentName:"p"},"onClick")," handler on a component and that would cause an unitented behaviour."))}m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/usage/functional.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-usage-functional-mdx-b0e5dc333ca970201fcd.js.map